import{_ as a}from"./StepWrap-B11qd6q9.js";import{_ as r}from"./index-DlGLH8OJ.js";import{o as l,b as d,e as t,h as i,i as s,k as n}from"./vendor-Cz5a7hiG.js";const p={},u={class:"scroll-content"};function b(m,e){const o=a;return l(),d("div",u,[e[5]||(e[5]=t(" WebSocket ")),e[6]||(e[6]=i("br",null,null,-1)),s(o,{step:"1",label:"setup"},{default:n(()=>e[0]||(e[0]=[t(" Websocket as a component -- In combi with store ")])),_:1}),s(o,{step:"2",label:"watch"},{default:n(()=>e[1]||(e[1]=[t(" Websocket has a watch on the user -- If a user is known the token must be in localstore -- So a connection with Ratched can be made. ")])),_:1}),s(o,{step:"3",label:"send"},{default:n(()=>e[2]||(e[2]=[t(" Any message send to the store is captured by the WebSocket component and send to Ratched. ")])),_:1}),s(o,{step:"4",label:"receive"},{default:n(()=>e[3]||(e[3]=[t(" Any message reived by the WebSocket component is put into the store. -- Any party that wants to do something with the message just needs to getter the store. ")])),_:1}),s(o,{step:"5",label:"store"},{default:n(()=>e[4]||(e[4]=[t(" So no-one in frontend needs to deal with WebSocket but just with the store. ")])),_:1})])}const h=r(p,[["render",b]]);export{h as default};
